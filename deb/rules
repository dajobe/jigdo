#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=2

# Non-standard default goal. This also does enough to allow you to
# compile from CVS just by typing "deb/rules"
build-deb: debian/changelog
	if test ! -d debian -a ! -h debian; then ln -s deb debian; fi
	if test ! -f configure; then autoconf; fi
	dpkg-buildpackage -rfakeroot -us -uc -b
	rm -f debian deb/changelog
debian/changelog:
	printf "jigdo (%s) unstable; urgency=low\n\n  * This version was built directly from upstream sources. It is not\n    an official Debian package.\n\n -- Richard Atterer <jigdo%satterer.net>  %s\n" "`read a b v <jigdo.spec && echo $$v`" "@" "`date -R`" >deb/changelog
src/Makedeps:
	$(MAKE) depend

# If the user did "./configure --some-option && make deb", then
# recover the --some-option from config.status and use it when
# reconfiguring with correct --prefix
configure: configure-stamp
configure-stamp:
	dh_testdir
	@o=`test config.status && sed -n "/^# [^ ]*configure/ { s/\(^# [^ ]*\|'\?--\(prefix\|mandir\|infodir\)=[^ ]*\)//gp; q;}" config.status`; \
	echo "(user-supplied configure options: $$o)"; \
	cmd="./configure $$o --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info"; \
	echo "$$cmd"; $$cmd
	touch configure-stamp

build: configure-stamp src/Makedeps debian/changelog build-stamp 
build-stamp:
	dh_testdir
	$(MAKE)
	src/cppunit-main
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	-$(MAKE) distclean
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	$(MAKE) DESTDIR=debian/jigdo install-jigdo install-po
	$(MAKE) DESTDIR=debian/jigdo-file \
	    install-jigdo-file install-jigdo-lite install-jigdo-mirror
	ln -sf "../common-licenses/GPL-2" \
	    "debian/jigdo/usr/share/jigdo/COPYING"
	for package in jigdo jigdo-file; do \
	    mkdir -p debian/$$package/usr/share/bug/$$package; \
	    at="@"; echo "Send-To: jigdo\${at}atterer.net" \
	        >debian/$$package/usr/share/bug/$$package/control; \
	done

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installexamples
	dh_installmenu
#	dh_undocumented
#	dh_installchangelogs 
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
